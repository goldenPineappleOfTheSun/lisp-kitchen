(define (foldl func initial lst)
  (if (null? lst)
      initial
      (foldl func (func initial (car lst)) (cdr lst))))

; утилита: чейнит вызовы вместе
(define (>> object . commands)
    (foldl 
           (lambda (result cmd) (apply result cmd))
           object
           commands))

; интерфейс продукта
(define (template-product name icon)
    (lambda (cmd . args)
        (cond 
          ((eq? cmd 'print) icon)
          ((eq? cmd 'name) name)
         )))

; курица
(define (make-chicken)
  (template-product "chicken" "🍗"))

; яблоко
(define (make-apple)
  (template-product "apple" "🍎"))

; интерфейс холодильника
(define (make-fridge . items)
  (lambda (cmd . args)
    (cond 
      ((eq? cmd 'print) (map (lambda (item) (item 'print)) items))
      ((eq? cmd 'put) (apply make-fridge (append items args)))
      ((eq? cmd 'get) (find (lambda (item) (equal? (car args) (item 'name))) items))
     )))
 
(define chicken1 (make-chicken))
(define apple1 (make-apple))
(define apple2 (make-apple))
(define empty-fridge (make-fridge))
(display (>> empty-fridge (list 'put apple1 apple2 chicken1) (list 'print)))